{"version":3,"sources":["components/Header/Header.module.css","components/Modal/Modal.module.css","components/Auth/Auth.module.css","components/PostList/PostList.module.css","config.js","utils/helpers.js","components/LoginForm/LoginForm.jsx","components/Auth/Auth.jsx","components/Header/Header.jsx","components/Author/Author.jsx","components/Modal/Modal.jsx","components/PostList/PostList.jsx","components/PostGrid/PostGrid.jsx","components/Post/Post.jsx","components/Posts/Posts.jsx","components/NewsRoll/NewsRoll.jsx","components/CommentForm/CommentForm.jsx","components/PostFull/PostFull.jsx","App.js","serviceWorker.js","index.js","components/PostFull/PostFull.module.css","components/Author/Author.module.css","components/CommentForm/CommentForm.module.css","components/NewsRoll/NewsRoll.module.css","components/Posts/Posts.module.css","components/PostGrid/PostGrid.module.css"],"names":["module","exports","URL","getAuthor","authorId","token","a","async","fetch","method","headers","response","getComments","postId","getPost","getPosts","page","order","orderBy","postLogin","username","password","body","JSON","stringify","postComment","commentId","name","comment","id","putTime","time","NormalLoginForm","state","authFailure","handleSubmit","e","preventDefault","props","form","validateFields","err","values","submitLogin","handleInput","inputType","target","inputValue","value","setState","url","history","ok","json","data","localStorage","setItem","push","window","location","reload","console","log","getFieldDecorator","this","onSubmit","Item","rules","required","message","prefix","type","style","color","placeholder","onChange","htmlType","React","Component","WrappedNormalLoginForm","Form","create","withRouter","className","styles","Auth","LoginForm","Header","Wrapper","href","onClick","removeItem","Author","author","auth","parse","getItem","Name","Picture","src","avatar","alt","Description","description","hide","Modal","children","PostList","useState","excerptOn","toggleExcerpt","authorOn","toggleAuthor","date","title","thumbnail","excerpt","Post","to","Title","Meta","Button","open","Content","close","PostGrid","view","Error","PostsList","posts","List","Grid","map","post","key","NewsRoll","match","params","pages","switchView","switchOrder","getData","switchOrderBy","switchPagination","currentPage","pagination","totalPages","Option","Select","Filters","defaultValue","ViewSelect","Fragment","Posts","Pagination","current","Number","total","NormalCommentForm","checked","submitComment","submit","TextArea","Input","rows","valuePropName","initialValue","Checkbox","Controls","SubmitButton","CloseButton","WrappedNormalCommentForm","PostFull","isLoading","commenting","comments","sessionBegins","loadComments","hideAuthor","hideComment","handleAuthor","prevState","Date","now","totalTime","PostMeta","content","CommentsList","index","Icon","App","getStoredToken","exact","path","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b306af7e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__3iT0_\",\"Wrapper\":\"Header_Wrapper__1k5Vd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Modal_Wrapper__1Z0gT\",\"Modal\":\"Modal_Modal__D9pyj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__2vd07\",\"Form\":\"Auth_Form__qDV49\",\"FormItem\":\"Auth_FormItem__3Uoji\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"PostList_Wrapper__2liNJ\",\"Post\":\"PostList_Post___7I25\",\"Meta\":\"PostList_Meta__UWqOH\",\"Title\":\"PostList_Title__3TZaQ\",\"Header\":\"PostList_Header__X_9ik\",\"Button\":\"PostList_Button__LXgb3\",\"open\":\"PostList_open___kkhq\",\"close\":\"PostList_close__3mHlv\",\"Picture\":\"PostList_Picture__muAwJ\",\"Content\":\"PostList_Content__2JWq7\"};","export const URL = 'https://edu-api.chop-chop.org';","import { URL } from './../config.js';\r\n\r\nexport const getAuthor = async (authorId, token) => {\r\n  const response = await fetch(`${URL}/author/${authorId}`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'X-Token': token\r\n    }\r\n  });\r\n\r\n  return response;\r\n}\r\n\r\nexport const getComments = async (postId, token) => {\r\n  const response = await fetch(`${URL}/posts/${postId}/comments`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'X-Token': token\r\n    }\r\n  });\r\n\r\n  return response;\r\n}\r\n\r\nexport const getPost = async (postId, token) => {\r\n  const response = await fetch(`${URL}/posts/${postId}`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'X-Token': token\r\n    }\r\n  });\r\n\r\n  return response;\r\n}\r\n\r\nexport const getPosts = async (page, order, orderBy, token) => {\r\n  const response = await fetch(`${URL}/posts?page=${page}&order=${order}&orderBy=${orderBy}`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'X-Token': token\r\n    }\r\n  });\r\n\r\n  return response;\r\n}\r\n\r\nexport const postLogin = async (username, password) => {\r\n  const response = await fetch(`${URL}/auth`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      username: username,\r\n      password: password\r\n    })\r\n  });\r\n\r\n  return response;\r\n}\r\n\r\nexport const postComment = async (commentId, name, comment, token) => {\r\n  const response = await fetch(`${URL}/comments`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'X-Token': token\r\n    },\r\n    body: JSON.stringify({\r\n      id: commentId,\r\n      name: name,\r\n      comment: comment\r\n    })\r\n  });\r\n\r\n  return response;\r\n}\r\n\r\nexport const putTime = async (postId, time, token) => {\r\n  const response = await fetch(`${URL}/time/${postId}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'X-Token': token\r\n    },\r\n    body: JSON.stringify({\r\n      time: time\r\n    })\r\n  });\r\n\r\n  return response;\r\n}\r\n","import React from 'react';\r\nimport { Form, Icon, Input, Button } from 'antd';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { postLogin } from './../../utils/helpers.js';\r\n\r\nclass NormalLoginForm extends React.Component {\r\n  state = {\r\n    authFailure: false\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      const { username, password } = values;\r\n\r\n      if (!err) {\r\n        this.submitLogin(URL, username, password);\r\n      }\r\n    });\r\n  };\r\n\r\n  handleInput = e => {\r\n    let inputType = e.target.name;\r\n    let inputValue = e.target.value;\r\n\r\n    this.setState({\r\n      [inputType]: inputValue\r\n    })\r\n  }\r\n\r\n  submitLogin = async (url, username, password) => {\r\n    const { history } = this.props;\r\n\r\n    try {\r\n      const response = await postLogin(username, password);\r\n\r\n      if (response.ok) {\r\n        const json = await response.json();\r\n        const { token } = json.data;\r\n        localStorage.setItem('token', JSON.stringify(token));\r\n        history.push('/react-news-app');\r\n        window.location.reload();\r\n      } else {\r\n        this.setState({\r\n          authFailure: true\r\n        })\r\n      }\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Form.Item>\r\n          {getFieldDecorator('username', {\r\n            rules: [{ required: true, message: 'Please input your username!' }],\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              placeholder=\"Username\"\r\n              onChange={this.handleInput}\r\n            />,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('password', {\r\n            rules: [{ required: true, message: 'Please input your Password!' }],\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              onChange={this.handleInput}\r\n            />,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Log in\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(NormalLoginForm);\r\n\r\nexport default withRouter(WrappedNormalLoginForm);","import React from 'react';\r\nimport styles from './Auth.module.css';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport LoginForm from '../LoginForm/LoginForm.jsx';\r\n\r\nconst Auth = () => {\r\n\r\n  return (\r\n    <div className={styles.Auth}>\r\n      <h2>Please log in</h2>\r\n      <LoginForm />\r\n    </div >\r\n  );\r\n\r\n}\r\n\r\nexport default withRouter(Auth);\r\n","import React from 'react';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport styles from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n  const { history } = props;\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem('token');\r\n    history.push('/react-news-app');\r\n  }\r\n\r\n  return (\r\n    <div className={styles.Header}>\r\n      <div className={styles.Wrapper}>\r\n        <a href=\"/react-news-app\">Home</a>\r\n        <h1>Simple news app</h1>\r\n        <a href=\"\" onClick={logoutHandler}>Logout</a>\r\n      </div>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\n\r\nimport { getAuthor } from '../../utils/helpers.js';\r\nimport styles from './Author.module.css';\r\n\r\nclass Author extends React.Component {\r\n\r\n  state = {\r\n    author: \"\",\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let { auth } = this.props;\r\n    const { id } = this.props;\r\n\r\n    if (!auth) {\r\n      auth = JSON.parse(localStorage.getItem('token'));\r\n    }\r\n\r\n    this.setState({\r\n      auth\r\n    }, async () => {\r\n      try {\r\n        const response = await getAuthor(id, auth);\r\n\r\n        if (response.ok) {\r\n          const json = await response.json();\r\n          const { data } = json;\r\n          this.setState({\r\n            author: data\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { author } = this.state;\r\n\r\n    return (\r\n      <div className={styles.Author}>\r\n        <div className={styles.Wrapper}>\r\n          <h2 className={styles.Name}>{author.name}</h2>\r\n          <picture className={styles.Picture}>\r\n            <img src={author.avatar} alt={author.name} />\r\n          </picture>\r\n        </div>\r\n\r\n        <p className={styles.Description}>{author.description}</p>\r\n\r\n        <Button onClick={this.props.hide}>\r\n          close\r\n        </Button>\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default Author;\r\n","import React from 'react';\r\nimport styles from './Modal.module.css';\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <div className={styles.Wrapper}>\r\n      <div className={styles.Modal}>\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Author from '../Author/Author.jsx';\r\nimport Modal from '../Modal/Modal.jsx';\r\nimport { Button, Icon } from 'antd';\r\n\r\nimport styles from './PostList.module.css';\r\n\r\nconst PostList = (props) => {\r\n\r\n  const [excerptOn, toggleExcerpt] = useState(false);\r\n  const [authorOn, toggleAuthor] = useState(false);\r\n\r\n  const { id, authorId, date, title, thumbnail, excerpt } = props;\r\n\r\n  const hideAuthor = () => {\r\n    toggleAuthor(false);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.Wrapper}>\r\n      <div className={styles.Post}>\r\n        <header className={styles.Header}>\r\n          <p>{date}</p>\r\n          <Link to={`post/${id}`}>\r\n            <h2 className={styles.Title}>\r\n              {title}\r\n            </h2>\r\n          </Link>\r\n        </header>\r\n\r\n        <picture className={styles.Picture}>\r\n          <img src={thumbnail} alt={title} />\r\n        </picture>\r\n\r\n        <div className={styles.Meta}>\r\n          <Button\r\n            className={styles.Button}\r\n            onClick={() => toggleAuthor(!authorOn)}>\r\n            <Icon type=\"info-circle\" />\r\n          </Button>\r\n          <Button\r\n            className={`${styles.Button} ${authorOn === true ? `${styles.open}` : null}`}\r\n            onClick={() => toggleExcerpt(!excerptOn)}>\r\n            <Icon type=\"more\" />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={`${styles.Content} ${excerptOn === true ? `${styles.open}` : null}`}>\r\n        <p>\r\n          {excerpt}\r\n        </p>\r\n        <Button\r\n          className={`${styles.Button} ${styles.close}`}\r\n          onClick={() => toggleExcerpt(!excerptOn)}>close</Button>\r\n      </div>\r\n\r\n      {authorOn &&\r\n        <Modal>\r\n          <Author\r\n            id={authorId}\r\n            hide={hideAuthor}\r\n          />\r\n        </Modal>}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostList;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport styles from './PostGrid.module.css';\r\n\r\nconst PostGrid = (props) => {\r\n\r\n  const { id, title, thumbnail } = props;\r\n\r\n  return (\r\n    <div className={styles.Wrapper}>\r\n      <Link to={`post/${id}`}>\r\n        <div className={styles.Post}>\r\n\r\n          <h2 className={styles.Title}>\r\n            {title}\r\n          </h2>\r\n\r\n          <picture>\r\n            <img src={thumbnail} alt={title} />\r\n          </picture>\r\n\r\n        </div>\r\n      </Link>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default PostGrid;\r\n","import React from 'react';\r\n\r\nimport PostList from '../../components/PostList/PostList.jsx';\r\nimport PostGrid from '../../components/PostGrid/PostGrid.jsx';\r\n\r\nconst Post = (props) => {\r\n  const { view } = props;\r\n\r\n  if (view === \"list\") {\r\n    return <PostList {...props} />\r\n  } else if (view === \"grid\") {\r\n    return <PostGrid {...props} />\r\n  } else {\r\n    throw new Error(\"No view type recieved\");\r\n  }\r\n\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport styles from './Posts.module.css';\r\n\r\nimport Post from '../Post/Post.jsx';\r\n\r\nconst PostsList = (props) => {\r\n\r\n  const { posts, view } = props;\r\n\r\n  return (\r\n    <div className={`${styles.PostList} ${view === \"list\" ? `${styles.List}` : `${styles.Grid}`}`}>\r\n      {\r\n        posts.map((post) => {\r\n          return (\r\n            <Post\r\n              view={view}\r\n              key={post.id}\r\n              {...post} />\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostsList;\r\n","import React from 'react';\r\nimport Posts from '../Posts/Posts.jsx';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getPosts } from '../../utils/helpers.js';\r\n\r\nimport { Pagination, Select } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport styles from './NewsRoll.module.css';\r\n\r\nclass NewsRoll extends React.Component {\r\n\r\n  state = {\r\n    view: 'list',\r\n    posts: '',\r\n    auth: '',\r\n    page: this.props.match.params.id || 1,\r\n    pages: 1,\r\n    order: 'asc',\r\n    orderBy: 'date'\r\n  }\r\n\r\n  switchView = (value) => {\r\n    this.setState({\r\n      view: value\r\n    })\r\n  }\r\n\r\n  switchOrder = (value) => {\r\n    this.setState({\r\n      order: value\r\n    }, () => this.getData()\r\n    )\r\n  }\r\n\r\n  switchOrderBy = (value) => {\r\n    this.setState({\r\n      orderBy: value\r\n    }, () => this.getData()\r\n    )\r\n  }\r\n\r\n  switchPagination = (value) => {\r\n    this.props.history.push(`/react-news-app/${value}`)\r\n    this.setState({\r\n      page: value\r\n    }, () => this.getData()\r\n    )\r\n  }\r\n\r\n  async getData() {\r\n    const { auth, page, order, orderBy } = this.state;\r\n    const { id } = this.props.match.params;\r\n\r\n    let currentPage = id ? id : page;\r\n\r\n    try {\r\n      const response = await getPosts(currentPage, order, orderBy, auth);\r\n\r\n      if (response.ok) {\r\n        const json = await response.json();\r\n        const { data, pagination } = json;\r\n        this.setState({\r\n          posts: data,\r\n          pages: pagination.totalPages\r\n        })\r\n      }\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { token } = this.props;\r\n    this.setState({\r\n      auth: token\r\n    }, () => {\r\n      this.getData()\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n    const { Option } = Select;\r\n\r\n    const { view, posts } = this.state;\r\n\r\n    return (\r\n      <div className={styles.Wrapper}>\r\n        <div className={styles.Filters}>\r\n          <Select\r\n            name=\"order\"\r\n            defaultValue=\"asc\"\r\n            onChange={this.switchOrder}>\r\n            <Option value=\"asc\">Sort ascending</Option>\r\n            <Option value=\"desc\">Sort descending</Option>\r\n          </Select>\r\n\r\n          <Select\r\n            name=\"orderBy\"\r\n            defaultValue=\"date\"\r\n            onChange={this.switchOrderBy}>\r\n            <Option value=\"date\">Sort by date</Option>\r\n            <Option value=\"title\">Sort by title</Option>\r\n          </Select>\r\n          <Select\r\n            className={styles.ViewSelect}\r\n            name=\"view\"\r\n            defaultValue=\"list\"\r\n            onChange={this.switchView}>\r\n            <Option value=\"list\">List</Option>\r\n            <Option value=\"grid\">Grid</Option>\r\n          </Select>\r\n        </div>\r\n\r\n        {posts !== \"\" &&\r\n          <React.Fragment>\r\n            <Posts\r\n              posts={posts}\r\n              view={view}\r\n            />\r\n\r\n            <Pagination\r\n              className={styles.Pagination}\r\n              current={Number(this.state.page)}\r\n              total={Number(this.state.pages) * 10}\r\n              onChange={this.switchPagination}\r\n            />\r\n          </React.Fragment>\r\n        }\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(NewsRoll);\r\n","import React from 'react';\r\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport styles from './CommentForm.module.css';\r\nimport { postComment } from '../../utils/helpers.js';\r\n\r\nclass NormalCommentForm extends React.Component {\r\n  state = {\r\n    authFailure: false\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      const { name, comment } = values;\r\n\r\n      if (!err && values.checked) {\r\n        this.submitComment(URL, name, comment);\r\n      }\r\n    });\r\n  };\r\n\r\n  handleInput = e => {\r\n    let inputType = e.target.name;\r\n    let inputValue = e.target.value;\r\n\r\n    this.setState({\r\n      [inputType]: inputValue\r\n    })\r\n  }\r\n\r\n  submitComment = async (url, username, comment) => {\r\n    const { id, auth, submit } = this.props;\r\n\r\n    try {\r\n      const response = await postComment(id, username, comment, auth);\r\n\r\n      if (response.ok) {\r\n        const json = await response.json();\r\n        console.log('json', json);\r\n        submit();\r\n      } else {\r\n        this.setState({\r\n          authFailure: true\r\n        })\r\n      }\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { TextArea } = Input;\r\n\r\n    return (\r\n      <Form onSubmit={this.handleSubmit} className={`login-form ${styles.Form}`}>\r\n        <Form.Item>\r\n          {getFieldDecorator('name', {\r\n            rules: [{ required: true, message: 'Please input your name!' }],\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              placeholder=\"Name\"\r\n              onChange={this.handleInput}\r\n            />,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('comment', {\r\n            rules: [{ required: true, message: 'Please input your comment' }],\r\n          })(\r\n            <TextArea\r\n              rows={4}\r\n              prefix={<Icon type=\"message\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              placeholder=\"Your comment...\"\r\n              onChange={this.handleInput}\r\n            />,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('checked', {\r\n            valuePropName: 'checked',\r\n            initialValue: false,\r\n            required: true\r\n          })(<Checkbox className={styles.Checkbox}>I accept</Checkbox>)}\r\n\r\n          <div className={styles.Controls} >\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className={`login-form-button ${styles.SubmitButton}`}>\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              type=\"default\"\r\n              htmlType=\"button\"\r\n              className={`login-form-button ${styles.CloseButton}`}\r\n              onClick={this.props.hide}>\r\n              Close\r\n            </Button>\r\n          </div>\r\n\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedNormalCommentForm = Form.create({ name: 'normal_comment' })(NormalCommentForm);\r\n\r\nexport default withRouter(WrappedNormalCommentForm);","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getComments, getPost, putTime } from './../../utils/helpers.js';\r\nimport { Button, Icon } from 'antd';\r\nimport Author from '../Author/Author.jsx';\r\nimport Modal from '../Modal/Modal.jsx';\r\nimport Comment from '../CommentForm/CommentForm.jsx';\r\n\r\nimport styles from './PostFull.module.css';\r\n\r\nclass PostFull extends React.Component {\r\n\r\n  state = {\r\n    post: \"\",\r\n    isLoading: true,\r\n    author: false,\r\n    commenting: false,\r\n    commentId: 1,\r\n    comments: false,\r\n    sessionBegins: false\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { token } = this.props;\r\n    const { id } = this.props.match.params;\r\n    const time = Date.now();\r\n\r\n    this.setState({\r\n      sessionBegins: time,\r\n      isLoading: true,\r\n      auth: token\r\n    }, async () => {\r\n      try {\r\n        const response = await getPost(id, token);\r\n\r\n        if (response.ok) {\r\n          const json = await response.json();\r\n          const { data } = json;\r\n          this.setState({\r\n            post: data,\r\n            isLoading: false\r\n          })\r\n        }\r\n\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.setState({\r\n          isLoading: false\r\n        })\r\n      }\r\n\r\n      this.loadComments();\r\n    })\r\n\r\n  }\r\n\r\n  async componentWillUnmount() {\r\n    const { id } = this.props.match.params;\r\n    const { sessionBegins, auth } = this.state;\r\n    const time = Date.now();\r\n\r\n    const totalTime = time - sessionBegins;\r\n\r\n    try {\r\n      const response = await putTime(id, totalTime, auth);\r\n\r\n      if (response.ok) {\r\n        const json = await response.json();\r\n      }\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n  }\r\n\r\n  postComment = () => {\r\n    this.setState({\r\n      commenting: true\r\n    })\r\n  }\r\n\r\n  loadComments = async () => {\r\n    const { auth } = this.state;\r\n    const { id } = this.props.match.params;\r\n\r\n    try {\r\n      const response = await getComments(id, auth);\r\n\r\n      if (response.ok) {\r\n        const json = await response.json();\r\n        const { data } = json;\r\n        this.setState({\r\n          comments: data,\r\n          isLoading: false\r\n        })\r\n      }\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setState({\r\n        isLoading: false\r\n      })\r\n    }\r\n  }\r\n\r\n  hideAuthor = () => {\r\n    this.setState({\r\n      author: false\r\n    })\r\n  }\r\n\r\n  hideComment = () => {\r\n    this.setState({\r\n      commenting: false\r\n    })\r\n  }\r\n\r\n  submitComment = () => {\r\n    this.setState({\r\n      commenting: false\r\n    })\r\n    this.loadComments();\r\n  }\r\n\r\n  handleAuthor = () => {\r\n    this.setState(prevState => ({\r\n      author: !prevState.author\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const { post, isLoading, author, commenting, comments } = this.state;\r\n\r\n    if (isLoading) {\r\n      return <h2>Loading...</h2>\r\n    } else {\r\n      return (\r\n        <div className={`${styles.Post}`}>\r\n          <h2>\r\n            {post.title}\r\n          </h2>\r\n          <picture className=\"Post-picture\">\r\n            <img src={post.thumbnail} alt={post.title} />\r\n          </picture>\r\n          <div className={styles.PostMeta}>\r\n            <p>{post.date}</p>\r\n            <Button\r\n              onClick={this.handleAuthor}>\r\n              <Icon type=\"info-circle\" />\r\n            </Button>\r\n          </div>\r\n\r\n          <p className={styles.Content}>\r\n            {post.content}\r\n          </p>\r\n\r\n          {author &&\r\n            <Modal>\r\n              <Author\r\n                id={post.authorId}\r\n                auth={this.state.auth}\r\n                hide={this.hideAuthor} />\r\n            </Modal>}\r\n\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={this.postComment}>\r\n            Comment\r\n          </Button>\r\n\r\n          {comments &&\r\n            <ul className={styles.CommentsList}>{this.state.comments.map((comment, index) => {\r\n              return (\r\n                <li key={index}>\r\n                  <h2><Icon type=\"user\" className={styles.Icon} />{comment.name}</h2>\r\n                  <p><Icon type=\"message\" className={styles.Icon} />{comment.comment}</p>\r\n                </li>\r\n              )\r\n            })}\r\n            </ul>\r\n          }\r\n\r\n          {commenting &&\r\n            <Modal>\r\n              <div className=\"Comment\">\r\n                <h2>Add Comment</h2>\r\n                <Comment\r\n                  id={post.id}\r\n                  auth={this.state.auth}\r\n                  hide={this.hideComment}\r\n                  submit={this.submitComment} />\r\n              </div>\r\n            </Modal>}\r\n\r\n        </div >\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default withRouter(PostFull);\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport Auth from './components/Auth/Auth.jsx';\r\nimport Header from './components/Header/Header.jsx';\r\nimport NewsRoll from './components/NewsRoll/NewsRoll.jsx';\r\nimport PostFull from './components/PostFull/PostFull.jsx';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    token: null\r\n  }\r\n\r\n  getStoredToken = () => {\r\n    let token = JSON.parse(localStorage.getItem('token'));\r\n\r\n    this.setState({\r\n      token\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getStoredToken();\r\n  }\r\n\r\n  render() {\r\n    const { token } = this.state;\r\n\r\n    if (!token) {\r\n      return (\r\n        <Router>\r\n          <Route path=\"/react-news-app/\">\r\n            <Auth />\r\n          </Route>\r\n        </Router>\r\n      )\r\n    } else {\r\n      return (\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Header />\r\n\r\n            <Switch>\r\n              <Route exact path=\"/react-news-app/\" component={() => <NewsRoll token={token} />} />\r\n              <Route exact path=\"/react-news-app/:id\" component={() => <NewsRoll token={token} />} />\r\n              <Route exact path=\"/react-news-app/post/:id\" component={() => <PostFull token={token} />} />\r\n              <Route path=\"/react-news-app/\" component={() => <NewsRoll token={token} />} />\r\n            </Switch>\r\n\r\n          </div>\r\n        </Router>\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// import { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Post\":\"PostFull_Post__YPyiN\",\"PostMeta\":\"PostFull_PostMeta__1X4Vz\",\"Content\":\"PostFull_Content__3wq4-\",\"CommentsList\":\"PostFull_CommentsList__3EDon\",\"Icon\":\"PostFull_Icon__114c-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Author_Wrapper__2dpMx\",\"Name\":\"Author_Name__2g3Gg\",\"Description\":\"Author_Description__1HRRJ\",\"Picture\":\"Author_Picture__kngyr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"CommentForm_Form__3nWO4\",\"Controls\":\"CommentForm_Controls__2a0TN\",\"Checkbox\":\"CommentForm_Checkbox__1xb0B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"NewsRoll_Wrapper__Qve5Q\",\"Filters\":\"NewsRoll_Filters__2y_V3\",\"ViewSelect\":\"NewsRoll_ViewSelect__6nfy7\",\"Pagination\":\"NewsRoll_Pagination__J6m5o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostList\":\"Posts_PostList__17CI5\",\"List\":\"Posts_List__3dh-g\",\"Grid\":\"Posts_Grid__hjK1E\",\"Post\":\"Posts_Post__3Fb-p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"PostGrid_Wrapper__19i9t\",\"Post\":\"PostGrid_Post__TN8rI\",\"Title\":\"PostGrid_Title__1VFc4\"};"],"sourceRoot":""}